"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[317],{2786:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting_started/scheduler","title":"The Scheduler","description":"An introduction to Planck\'s Scheduler","source":"@site/docs/getting_started/scheduler.md","sourceDirName":"getting_started","slug":"/getting_started/scheduler","permalink":"/planck/docs/getting_started/scheduler","draft":false,"unlisted":false,"editUrl":"https://github.com/YetAnotherClown/planck/edit/main/docs/getting_started/scheduler.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"The Scheduler","description":"An introduction to Planck\'s Scheduler","sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Introduction","permalink":"/planck/docs/getting_started/introduction"},"next":{"title":"Systems","permalink":"/planck/docs/getting_started/systems"}}');var r=n(74848),c=n(28453);const l={title:"The Scheduler",description:"An introduction to Planck's Scheduler",sidebar_position:2},o="The Scheduler",i={},d=[{value:"What&#39;s Next?",id:"whats-next",level:2}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"the-scheduler",children:"The Scheduler"})}),"\n",(0,r.jsx)(t.p,{children:"The scheduler is the core of Planck! This is where you handle setup and initialization for\r\nyour game's scheduling."}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.p,{children:["The Scheduler's API Design is largely influenced by ",(0,r.jsx)(t.a,{href:"https://bevyengine.org/",children:"Bevy"})," Schedules!"]})}),"\n",(0,r.jsx)(t.p,{children:"To create a new Scheduler, we can do it like so,"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-lua",children:'local Planck = require("@packages/Planck")\r\nlocal Scheduler = Planck.Scheduler\r\n\r\nlocal scheduler = Scheduler.new()\n'})}),"\n",(0,r.jsxs)(t.p,{children:["This is technically all the setup you need to do with the Scheduler, there's no ",(0,r.jsx)(t.code,{children:"start"})," or initialization method\r\nby design."]}),"\n",(0,r.jsxs)(t.p,{children:["In this step, you can also add ",(0,r.jsx)(t.a,{href:"/planck/docs/plugins/",children:"Planck Plugins"})," to extend the functionality of the scheduler or add support for 3rd party tooling like Jabby."]}),"\n",(0,r.jsxs)(t.p,{children:["Another thing you might want to do is passing state to your systems. You can do this by passing them into the ",(0,r.jsx)(t.code,{children:"Scheduler.new()"})," function.\r\nWe will go over how to access this state later."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-lua",metastring:"{4-8,10}",children:'local Planck = require("@packages/Planck")\r\nlocal Scheduler = Planck.Scheduler\r\n\r\nlocal Jecs = require("@packages/Jecs")\r\nlocal World = Jecs.World\r\n\r\nlocal world = World.new()\r\nlocal state = {}\r\n\r\nlocal scheduler = Scheduler.new(world, state)\n'})}),"\n",(0,r.jsx)(t.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,r.jsx)(t.p,{children:"Let's learn how to make Systems and add then to our Scheduler now."}),"\n",(0,r.jsxs)(t.p,{children:["\u2192 ",(0,r.jsx)(t.a,{href:"/planck/docs/getting_started/systems",children:"Systems"})]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var s=n(96540);const r={},c=s.createContext(r);function l(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);