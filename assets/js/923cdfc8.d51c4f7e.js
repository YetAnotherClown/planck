"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[527],{34796:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"plugins/runservice","title":"RunService Phases","description":"A Plugin to adds built-in RunService Phases and Pipelines","source":"@site/docs/plugins/runservice.md","sourceDirName":"plugins","slug":"/plugins/runservice","permalink":"/planck/docs/plugins/runservice","draft":false,"unlisted":false,"editUrl":"https://github.com/YetAnotherClown/planck/edit/main/docs/plugins/runservice.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"RunService Phases","description":"A Plugin to adds built-in RunService Phases and Pipelines","sidebar_position":4},"sidebar":"defaultSidebar","previous":{"title":"Matter Debugger","permalink":"/planck/docs/plugins/matter_debugger"}}');var r=i(74848),l=i(28453);const a={title:"RunService Phases",description:"A Plugin to adds built-in RunService Phases and Pipelines",sidebar_position:4},t=void 0,c={},d=[{value:"Installation",id:"installation",level:3},{value:"Setup",id:"setup",level:3},{value:"Pipelines",id:"pipelines",level:3},{value:"Phases",id:"phases",level:3},{value:"More Update Phases",id:"more-update-phases",level:3}];function o(e){const n={admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Planck provides a plugin that adds built-in Phases and Pipelines for each\r\nRunService event."}),"\n",(0,r.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'title="wally.toml"',children:'[dependencies]\r\nPlanckRunService = "yetanotherclown/planck-runservice@0.2.0-rc.1"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,r.jsx)(n.p,{children:"First, we need to create the scheduler, and add the Plugin to it."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="src/shared/scheduler.luau"',children:'local Planck = require("@packages/Planck")\r\nlocal Scheduler = Planck.Scheduler\r\n\r\nlocal world = require("@shared/world")\r\n\r\nlocal PlanckRunService = require("@packages/PlanckRunService")\r\nlocal runServicePlugin = PlanckRunService.new()\r\n\r\nlocal scheduler = scheduler.new(world)\r\n    :addPlugin(runServicePlugin)\r\n\r\nreturn scheduler\n'})}),"\n",(0,r.jsx)(n.h3,{id:"pipelines",children:"Pipelines"}),"\n",(0,r.jsx)(n.p,{children:"Each RunService Event is now it's own Pipeline,"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"PreRender"}),"\n",(0,r.jsx)(n.li,{children:"PreAnimation"}),"\n",(0,r.jsx)(n.li,{children:"PreSimulation"}),"\n",(0,r.jsx)(n.li,{children:"PostSimulation"}),"\n",(0,r.jsx)(n.li,{children:"Heartbeat"}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"You might be more familiar with the old names for some of these events."}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PreRender"})," is equivalent to ",(0,r.jsx)(n.code,{children:"RenderStepped"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PreSimulation"})," is equivalent to ",(0,r.jsx)(n.code,{children:"Stepped"})]}),"\n"]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local PlanckRunService = require("@packages/PlanckRunService")\r\n\r\nlocal Pipelines = PlanckRunService.Pipelines\r\n\r\nlocal PreRender = Pipelines.PreRender\r\nlocal PreAnimation = Pipelines.PreAnimation\r\nlocal PreSimulation = Pipelines.PreSimulation\r\nlocal PostSimulation = Pipelines.PostSimulation\r\nlocal Heartbeat = Pipelines.Heartbeat\n'})}),"\n",(0,r.jsx)(n.h3,{id:"phases",children:"Phases"}),"\n",(0,r.jsxs)(n.p,{children:["And it's own Phase, with the exception of ",(0,r.jsx)(n.code,{children:"Heartbeat"})," which has many Phases."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Event"}),(0,r.jsx)(n.th,{children:"Phase"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PreRender"}),(0,r.jsx)(n.td,{children:"PreRender"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PreAnimation"}),(0,r.jsx)(n.td,{children:"PreAnimation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PreSimulation"}),(0,r.jsx)(n.td,{children:"PreSimulation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PostSimulation"}),(0,r.jsx)(n.td,{children:"PostSimulation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Heartbeat"}),(0,r.jsx)(n.td,{children:"Update"})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local PlanckRunService = require("@packages/PlanckRunService")\r\n\r\nlocal Phases = PlanckRunService.Phases\r\n\r\nlocal PreRender = Phases.PreRender\r\nlocal PreAnimation = Phases.PreAnimation\r\nlocal PreSimulation = Phases.PreSimulation\r\nlocal PostSimulation = Phases.PostSimulation\r\nlocal Update = Phases.Update\n'})}),"\n",(0,r.jsx)(n.h3,{id:"more-update-phases",children:"More Update Phases"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"RunService.Heartbeat"})," isn't just a single Phase, instead its composed of\r\nmany Phases. This is because the Update Phases are where most of your\r\ngame's logic will run on, so we believe it's important that you can\r\nexpress the order of execution easily right out of the box."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"First"}),"\n",(0,r.jsx)(n.li,{children:"PreUpdate"}),"\n",(0,r.jsx)(n.li,{children:"Update"}),"\n",(0,r.jsx)(n.li,{children:"PostUpdate"}),"\n",(0,r.jsx)(n.li,{children:"Last"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local PlanckRunService = require("@packages/PlanckRunService")\r\n\r\nlocal Phases = PlanckRunService.Phases\r\n\r\nlocal First = Phases.First\r\nlocal PreUpdate = Phases.PreUpdate\r\nlocal Update = Phases.Update\r\nlocal PostUpdate = Phases.PostUpdate\r\nlocal Last = Phases.Last\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var s=i(96540);const r={},l=s.createContext(r);function a(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);